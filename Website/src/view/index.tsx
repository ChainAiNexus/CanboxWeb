import { useEffect, useState } from 'react';
import copy from 'copy-to-clipboard';
import { useDispatch, useSelector } from 'react-redux';
import { useAnchorWallet, useWallet } from '@solana/wallet-adapter-react';
import { useTranslation } from 'react-i18next';
import HomeCss from './index.module.css';
import icon5 from '../assets/image/new/icon5.png';
import icon6 from '../assets/image/new/icon6.png';
import docicon from '../assets/image/docicon.png';

import H5Top from '../components/hander';
import { getCategoryByIdList, getCategoryList, getInstalledApps, searchAiBase } from '../API';
import { useNavigate } from 'react-router-dom';
import { showLoding } from '../utils/tool';
import { notification } from 'antd';
import { getQueryParam } from '../utils/getUrlParamsLegacy';

export default function Home() {
    const { t } = useTranslation();
    const token = useSelector((state: any) => state?.token);
    const { publicKey } = useWallet();
    const [_token, _setToken]: any = useState('');

    const [tabValue, setTabValue] = useState(getQueryParam('tab') || ''); // web3
    const [tabIndex, setTabIndex] = useState(0);
    const [categoryList, setCategoryList] = useState([] as any);
    const [categoryByIdList, setCategoryByIdList] = useState([] as any);
    useEffect(() => {
        if (!!token) {
            handleGetCategoryList();
            _setToken(localStorage.getItem('accessToken'));
        } else {
        }
    }, [token, tabIndex, tabValue]);
    const handleGetCategoryList = () => {
        showLoding(true);
        getCategoryList()
            .then((res: any) => {
                setCategoryList(res.data);

                if (tabValue === 'web3') {
                    setTabIndex(1);
                    handletCategoryByIdList(res.data[1]?.id);
                } else {
                    handletCategoryByIdList(res.data[tabIndex]?.id);
                }
            })
            .catch((err: any) => {});
    };
    const handletCategoryByIdList = (id?: number) => {
        getCategoryByIdList(id)
            .then((res: any) => {
                setCategoryByIdList(res.data);
                handleLoadApps();
            })
            .catch((err: any) => {})
            .finally(() => {
                showLoding(false);
            });
    };

    const [searchValue, setSearchValue] = useState('');
    const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {
        if (event.key === 'Enter') {
            handleSearch();
        }
    };
    const handleSearch = () => {
        searchAiBase({
            categoryId: categoryList[tabIndex]?.id,
            name: searchValue,
        })
            .then((res: any) => {
                setCategoryByIdList(res.data);
            })
            .catch((err: any) => {})
            .finally(() => {});
    };
    const navigate = useNavigate();

    // 
    const [apps, setApps] = useState([] as any);
    const handleLoadApps = () => {
        getInstalledApps({
            token: localStorage.getItem('accessToken'),
        })
            .then((res: any) => {
                setApps(JSON.parse(res?.data)?.installed_apps);
            })
            .catch((err: any) => {})
            .finally(() => {});
    };

    useEffect(() => {
        // setVisible(!publicKey);
        if (!publicKey && !token) {
            navigate('/login');
        }
    }, [publicKey, token]);

    return (
        <div className="main_app">
            <H5Top />
            <div className={HomeCss.main}>
                <div className={HomeCss.main_left}>
                    <div className={HomeCss.main_left_box}>
                        <a
                            href={`https://cloud.chainainexus.com/explore/apps?_token=${_token}`}
                            target="_blank"
                            rel="noopener noreferrer"
                        >
                            <div className={HomeCss.main_left_1}>Discovery</div>
                        </a>
                        <div className={HomeCss.main_left_2}>WORKSPACE</div>
                        {apps.map((item: any) => (
                            <a
                                href={`https://cloud.chainainexus.com/explore/installed/${item?.app?.id}?_token=${_token}`}
                                target="_blank"
                                key={item.id}
                                rel="noreferrer"
                            >
                                <div className={HomeCss.main_left_3}>
                                    <img src={icon5} alt="" />
                                    <div className="line-clamp-1_1">{item?.app?.name}</div>
                                </div>
                            </a>
                        ))}
                    </div>
            <div className={HomeCss.main_left_orter}>
              {/* <a href="/" target="_blank" rel="noopener noreferrer">
                <img src={docicon} style={{ width: '24px', height: '24px' }} alt="" />
              </a> */}
              <a href="https://x.com/ChainAiNexus
" target="_blank" rel="noopener noreferrer">
                <svg style={{ margin: '0px 16px' }} xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                  <path d="M18.3263 1.90393H21.6998L14.3297 10.3274L23 21.7899H16.2112L10.894 14.838L4.80995 21.7899H1.43443L9.31743 12.78L1 1.90393H7.96111L12.7674 8.25826L18.3263 1.90393ZM17.1423 19.7707H19.0116L6.94539 3.81706H4.93946L17.1423 19.7707Z" fill="white" />
                </svg></a>
              <a href="https://discord.com/invite/5thjdHfFyK" target="_blank" rel="noopener noreferrer">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                  <path d="M20.317 4.15557C18.7873 3.45369 17.147 2.93658 15.4319 2.6404C15.4007 2.63469 15.3695 2.64897 15.3534 2.67754C15.1424 3.05276 14.9087 3.54225 14.7451 3.927C12.9004 3.65083 11.0652 3.65083 9.25832 3.927C9.09465 3.5337 8.85248 3.05276 8.64057 2.67754C8.62449 2.64992 8.59328 2.63564 8.56205 2.6404C6.84791 2.93563 5.20756 3.45275 3.67693 4.15557C3.66368 4.16129 3.65233 4.17082 3.64479 4.18319C0.533392 8.83155 -0.31895 13.3657 0.0991801 17.8436C0.101072 17.8655 0.11337 17.8864 0.130398 17.8997C2.18321 19.4073 4.17171 20.3225 6.12328 20.9291C6.15451 20.9386 6.18761 20.9272 6.20748 20.9015C6.66913 20.2711 7.08064 19.6063 7.43348 18.9073C7.4543 18.8664 7.43442 18.8178 7.39186 18.8016C6.73913 18.554 6.1176 18.2521 5.51973 17.9093C5.47244 17.8816 5.46865 17.814 5.51216 17.7816C5.63797 17.6873 5.76382 17.5893 5.88396 17.4902C5.90569 17.4721 5.93598 17.4683 5.96153 17.4797C9.88928 19.273 14.1415 19.273 18.023 17.4797C18.0485 17.4674 18.0788 17.4712 18.1015 17.4893C18.2216 17.5883 18.3475 17.6873 18.4742 17.7816C18.5177 17.814 18.5149 17.8816 18.4676 17.9093C17.8697 18.2588 17.2482 18.554 16.5945 18.8006C16.552 18.8168 16.533 18.8664 16.5538 18.9073C16.9143 19.6054 17.3258 20.2701 17.7789 20.9005C17.7978 20.9272 17.8319 20.9386 17.8631 20.9291C19.8241 20.3225 21.8126 19.4073 23.8654 17.8997C23.8834 17.8864 23.8948 17.8664 23.8967 17.8445C24.3971 12.6676 23.0585 8.17064 20.3482 4.18414C20.3416 4.17082 20.3303 4.16129 20.317 4.15557ZM8.02002 15.117C6.8375 15.117 5.86313 14.0313 5.86313 12.6981C5.86313 11.3648 6.8186 10.2791 8.02002 10.2791C9.23087 10.2791 10.1958 11.3743 10.1769 12.6981C10.1769 14.0313 9.22141 15.117 8.02002 15.117ZM15.9947 15.117C14.8123 15.117 13.8379 14.0313 13.8379 12.6981C13.8379 11.3648 14.7933 10.2791 15.9947 10.2791C17.2056 10.2791 18.1705 11.3743 18.1516 12.6981C18.1516 14.0313 17.2056 15.117 15.9947 15.117Z" fill="white" />
                </svg></a>
            </div>
                </div>
                <div className={HomeCss.main_right}>
                    <div className={HomeCss.main_right_1}>Explore Apps by CAN20</div>
                    <div className={HomeCss.main_right_2}>
                        Use these template apps instantly or customize your own apps based on the templates.
                    </div>
                    <div className={HomeCss.main_right_3}>
                        <div className={HomeCss.main_right_3_left}>
                            {categoryList.map((item: any, index: number) => (
                                <div
                                    key={index}
                                    className={`${HomeCss.main_right_3_item} ${
                                        tabIndex === index ? HomeCss.main_right_3_item_on : ''
                                    }`}
                                    onClick={() => {
                                        if (item?.isInternal === 1) {
                                            setTabValue('index');
                                            setTabIndex(index);
                                        } else {
                                            window.open(item?.url + '?_token=' + _token, '_blank');
                                        }
                                    }}
                                >
                                    <div
                                        style={{
                                            display: 0 === index ? 'block' : 'none',
                                        }}
                                    >
                                        {tabIndex === index ? (
                                            <svg
                                                xmlns="http://www.w3.org/2000/svg"
                                                width="20"
                                                height="20"
                                                viewBox="0 0 30 30"
                                                fill="none"
                                            >
                                                <path
                                                    d="M12.4898 5.93951C12.9882 4.34534 13.8538 3.66442 15.5614 4.15817L15.6044 4.17215C16.1038 4.32597 16.6784 4.61856 17.2175 5.10908C18.0659 5.88358 18.5707 6.95712 18.5707 8.30604C18.5707 9.51082 18.5009 10.2552 18.2968 11.0996L18.2904 11.1233H22.7077C25.4077 11.1233 26.4806 12.9477 25.8018 15.9811L25.7438 16.2296L25.6064 16.6835L25.0876 18.3756L24.8449 19.149L24.614 19.8719L24.1844 21.1735L23.8912 22.0211L23.7097 22.5267L23.4584 23.1915L23.3048 23.5755C22.5616 25.3719 21.028 26.197 19.0229 25.9603L9.27862 25.2342C9.2167 25.231 9.15477 25.2281 9.09282 25.2256L8.70619 25.217H7.60965L7.29498 25.2116L7.04366 25.2009L6.83424 25.1815L6.7408 25.1675L6.56145 25.132L6.27147 25.0557C4.77756 24.6114 4 23.3432 4 21.536V14.388C4 12.1054 5.38329 10.8027 7.7396 10.8027L9.647 10.8016L9.77802 10.7016C10.5236 10.0856 11.1414 9.32909 11.5963 8.47492L11.7499 8.17373C11.9034 7.85747 12.0291 7.52616 12.1483 7.13999L12.1676 7.07437L12.4898 5.93951ZM14.7216 6.14282C14.6754 6.13206 14.655 6.14712 14.6324 6.21274L14.5347 6.58923L14.2662 7.55843L14.2018 7.77357C14.0642 8.23311 13.8911 8.68123 13.6841 9.11388C13.2189 10.0686 12.6015 10.9409 11.8562 11.6966C11.478 12.0893 11.0626 12.4442 10.6157 12.7562L10.7543 12.6572V23.1807L19.2291 23.8197C20.2837 23.9434 20.8808 23.6659 21.2481 22.9096L21.3201 22.7526L21.4651 22.3901L21.7046 21.7554L21.8786 21.2692L22.161 20.4506L22.364 19.8439L22.8011 18.4885L23.2844 16.9417L23.6732 15.6595C24.1511 13.7415 23.8697 13.2747 22.7077 13.2747H17.2282C17.0131 13.2748 16.801 13.2234 16.6096 13.1248C16.4183 13.0262 16.2533 12.8831 16.1284 12.7077C16.0034 12.5322 15.9221 12.3294 15.8913 12.1161C15.8605 11.9028 15.8811 11.6852 15.9513 11.4815L16.006 11.3201L16.0898 11.0448C16.3486 10.1433 16.4227 9.55384 16.4227 8.30604C16.4227 7.08513 15.7461 6.4666 14.9868 6.2321L14.8934 6.20306L14.7216 6.14282ZM8.60631 12.953H7.74068C6.54211 12.953 6.14904 13.3241 6.14904 14.388V21.536C6.14904 22.4944 6.39927 22.8806 6.99963 23.0237L7.03722 23.0323L7.13173 23.0463L7.26061 23.057L7.55166 23.0635H8.27122L8.60631 23.0656V12.9541V12.953Z"
                                                    fill="#43FEE8"
                                                />
                                            </svg>
                                        ) : (
                                            <svg
                                                xmlns="http://www.w3.org/2000/svg"
                                                width="20"
                                                height="20"
                                                viewBox="0 0 30 30"
                                                fill="none"
                                            >
                                                <path
                                                    d="M12.4898 5.93951C12.9882 4.34534 13.8538 3.66442 15.5614 4.15817L15.6044 4.17215C16.1038 4.32597 16.6784 4.61856 17.2175 5.10908C18.0659 5.88358 18.5707 6.95712 18.5707 8.30604C18.5707 9.51082 18.5009 10.2552 18.2968 11.0996L18.2904 11.1233H22.7077C25.4077 11.1233 26.4806 12.9477 25.8018 15.9811L25.7438 16.2296L25.6064 16.6835L25.0876 18.3756L24.8449 19.149L24.614 19.8719L24.1844 21.1735L23.8912 22.0211L23.7097 22.5267L23.4584 23.1915L23.3048 23.5755C22.5616 25.3719 21.028 26.197 19.0229 25.9603L9.27862 25.2342C9.2167 25.231 9.15477 25.2281 9.09282 25.2256L8.70619 25.217H7.60965L7.29498 25.2116L7.04366 25.2009L6.83424 25.1815L6.7408 25.1675L6.56145 25.132L6.27147 25.0557C4.77756 24.6114 4 23.3432 4 21.536V14.388C4 12.1054 5.38329 10.8027 7.7396 10.8027L9.647 10.8016L9.77802 10.7016C10.5236 10.0856 11.1414 9.32909 11.5963 8.47492L11.7499 8.17373C11.9034 7.85747 12.0291 7.52616 12.1483 7.13999L12.1676 7.07437L12.4898 5.93951ZM14.7216 6.14282C14.6754 6.13206 14.655 6.14712 14.6324 6.21274L14.5347 6.58923L14.2662 7.55843L14.2018 7.77357C14.0642 8.23311 13.8911 8.68123 13.6841 9.11388C13.2189 10.0686 12.6015 10.9409 11.8562 11.6966C11.478 12.0893 11.0626 12.4442 10.6157 12.7562L10.7543 12.6572V23.1807L19.2291 23.8197C20.2837 23.9434 20.8808 23.6659 21.2481 22.9096L21.3201 22.7526L21.4651 22.3901L21.7046 21.7554L21.8786 21.2692L22.161 20.4506L22.364 19.8439L22.8011 18.4885L23.2844 16.9417L23.6732 15.6595C24.1511 13.7415 23.8697 13.2747 22.7077 13.2747H17.2282C17.0131 13.2748 16.801 13.2234 16.6096 13.1248C16.4183 13.0262 16.2533 12.8831 16.1284 12.7077C16.0034 12.5322 15.9221 12.3294 15.8913 12.1161C15.8605 11.9028 15.8811 11.6852 15.9513 11.4815L16.006 11.3201L16.0898 11.0448C16.3486 10.1433 16.4227 9.55384 16.4227 8.30604C16.4227 7.08513 15.7461 6.4666 14.9868 6.2321L14.8934 6.20306L14.7216 6.14282ZM8.60631 12.953H7.74068C6.54211 12.953 6.14904 13.3241 6.14904 14.388V21.536C6.14904 22.4944 6.39927 22.8806 6.99963 23.0237L7.03722 23.0323L7.13173 23.0463L7.26061 23.057L7.55166 23.0635H8.27122L8.60631 23.0656V12.9541V12.953Z"
                                                    fill="#9D9D9D"
                                                />
                                            </svg>
                                        )}
                                    </div>
                                    <div
                                        style={{
                                            display: 1 === index ? 'block' : 'none',
                                        }}
                                    >
                                        {tabIndex === 1 ? (
                                            <svg
                                                xmlns="http://www.w3.org/2000/svg"
                                                width="20"
                                                height="20"
                                                viewBox="0 0 30 30"
                                                fill="none"
                                            >
                                                <path
                                                    d="M23.8 15C23.8 13.8444 23.5724 12.7001 23.1301 11.6324C22.6879 10.5647 22.0397 9.59461 21.2225 8.77746C20.4054 7.9603 19.4353 7.3121 18.3676 6.86986C17.2999 6.42762 16.1556 6.2 15 6.2C13.8444 6.2 12.7001 6.42762 11.6324 6.86986C10.5647 7.3121 9.59461 7.9603 8.77746 8.77746C7.9603 9.59461 7.3121 10.5647 6.86986 11.6324C6.42762 12.7001 6.2 13.8444 6.2 15C6.2 17.3339 7.12714 19.5722 8.77746 21.2225C10.4278 22.8729 12.6661 23.8 15 23.8C17.3339 23.8 19.5722 22.8729 21.2225 21.2225C22.8729 19.5722 23.8 17.3339 23.8 15ZM26 15C26 21.0753 21.0753 26 15 26C8.9247 26 4 21.0753 4 15C4 8.9247 8.9247 4 15 4C21.0753 4 26 8.9247 26 15ZM20.1766 13.4204C19.9852 14.5787 19.3791 15.1441 18.5585 15.3443C19.6497 15.9548 20.1755 16.8821 19.6134 18.509C18.9149 20.5484 17.3507 20.7332 15.2794 20.3383L14.7448 22.491L13.5414 22.1929L14.0749 20.0402C13.7471 19.9522 13.4127 19.8884 13.086 19.7949L12.5525 21.9476L11.3513 21.6506L11.8848 19.4968L9.4912 18.8456L10.0852 17.3232C10.0852 17.3232 10.9894 17.5718 10.9762 17.5564C11.3106 17.6378 11.4745 17.4024 11.5416 17.2396L12.3952 13.7889L13.0178 11.3359C13.0442 11.0708 12.9606 10.7232 12.4711 10.5912C12.5041 10.5725 11.5911 10.3734 11.5911 10.3734L11.9464 8.9302L14.4137 9.5418L14.9362 7.4331L16.1792 7.7411L15.6567 9.8498C15.9768 9.9202 16.2881 10.0038 16.6093 10.0863L17.1307 7.9776L18.3407 8.2768L17.8039 10.4405C19.3296 11.0015 20.4285 11.8298 20.1766 13.4204ZM14.5666 13.8494C15.2893 14.0672 17.4321 14.7107 17.7929 13.2774C18.1295 11.9134 16.2727 11.4976 15.4103 11.304C15.308 11.282 15.22 11.2622 15.1518 11.2435L14.5061 13.8318L14.5666 13.8494ZM13.4512 18.0514L13.5557 18.0833C14.4467 18.3473 16.9723 19.0986 17.3155 17.6763C17.6675 16.3057 15.3971 15.7722 14.3796 15.5324C14.2685 15.5071 14.1717 15.484 14.0958 15.4642L13.4512 18.0514Z"
                                                    fill="#43FEE8"
                                                />
                                            </svg>
                                        ) : (
                                            <svg
                                                xmlns="http://www.w3.org/2000/svg"
                                                width="20"
                                                height="20"
                                                viewBox="0 0 30 30"
                                                fill="none"
                                            >
                                                <path
                                                    d="M23.8 15C23.8 13.8444 23.5724 12.7001 23.1301 11.6324C22.6879 10.5647 22.0397 9.59461 21.2225 8.77746C20.4054 7.9603 19.4353 7.3121 18.3676 6.86986C17.2999 6.42762 16.1556 6.2 15 6.2C13.8444 6.2 12.7001 6.42762 11.6324 6.86986C10.5647 7.3121 9.59461 7.9603 8.77746 8.77746C7.9603 9.59461 7.3121 10.5647 6.86986 11.6324C6.42762 12.7001 6.2 13.8444 6.2 15C6.2 17.3339 7.12714 19.5722 8.77746 21.2225C10.4278 22.8729 12.6661 23.8 15 23.8C17.3339 23.8 19.5722 22.8729 21.2225 21.2225C22.8729 19.5722 23.8 17.3339 23.8 15ZM26 15C26 21.0753 21.0753 26 15 26C8.9247 26 4 21.0753 4 15C4 8.9247 8.9247 4 15 4C21.0753 4 26 8.9247 26 15ZM20.1766 13.4204C19.9852 14.5787 19.3791 15.1441 18.5585 15.3443C19.6497 15.9548 20.1755 16.8821 19.6134 18.509C18.9149 20.5484 17.3507 20.7332 15.2794 20.3383L14.7448 22.491L13.5414 22.1929L14.0749 20.0402C13.7471 19.9522 13.4127 19.8884 13.086 19.7949L12.5525 21.9476L11.3513 21.6506L11.8848 19.4968L9.4912 18.8456L10.0852 17.3232C10.0852 17.3232 10.9894 17.5718 10.9762 17.5564C11.3106 17.6378 11.4745 17.4024 11.5416 17.2396L12.3952 13.7889L13.0178 11.3359C13.0442 11.0708 12.9606 10.7232 12.4711 10.5912C12.5041 10.5725 11.5911 10.3734 11.5911 10.3734L11.9464 8.9302L14.4137 9.5418L14.9362 7.4331L16.1792 7.7411L15.6567 9.8498C15.9768 9.9202 16.2881 10.0038 16.6093 10.0863L17.1307 7.9776L18.3407 8.2768L17.8039 10.4405C19.3296 11.0015 20.4285 11.8298 20.1766 13.4204ZM14.5666 13.8494C15.2893 14.0672 17.4321 14.7107 17.7929 13.2774C18.1295 11.9134 16.2727 11.4976 15.4103 11.304C15.308 11.282 15.22 11.2622 15.1518 11.2435L14.5061 13.8318L14.5666 13.8494ZM13.4512 18.0514L13.5557 18.0833C14.4467 18.3473 16.9723 19.0986 17.3155 17.6763C17.6675 16.3057 15.3971 15.7722 14.3796 15.5324C14.2685 15.5071 14.1717 15.484 14.0958 15.4642L13.4512 18.0514Z"
                                                    fill="#9D9D9D"
                                                />
                                            </svg>
                                        )}
                                    </div>
                                    <div
                                        style={{
                                            display: 2 === index ? 'block' : 'none',
                                        }}
                                    >
                                        {tabIndex === 2 ? (
                                            <svg
                                                xmlns="http://www.w3.org/2000/svg"
                                                width="20"
                                                height="20"
                                                viewBox="0 0 30 30"
                                                fill="none"
                                            >
                                                <path
                                                    d="M19.0269 8.19904C19.0271 9.02983 18.7912 9.84203 18.3489 10.5329C17.9066 11.2238 17.2778 11.7624 16.5421 12.0805C15.8063 12.3986 14.9967 12.4819 14.2156 12.32C13.4344 12.1581 12.7169 11.7581 12.1536 11.1708C11.5904 10.5834 11.2068 9.83497 11.0514 9.02016C10.8959 8.20535 10.9756 7.36075 11.2803 6.59318C11.585 5.82561 12.1011 5.16955 12.7633 4.70796C13.4254 4.24637 14.204 4 15.0004 4C16.0681 4.00007 17.092 4.44244 17.8471 5.22987C18.6021 6.01729 19.0265 7.08529 19.0269 8.19904ZM17.0135 8.19904C17.0135 7.7837 16.8954 7.37768 16.6742 7.03234C16.453 6.68699 16.1386 6.41783 15.7708 6.25888C15.4029 6.09994 14.9982 6.05835 14.6076 6.13938C14.2171 6.22041 13.8584 6.42042 13.5769 6.71411C13.2954 7.0078 13.1036 7.38199 13.0259 7.78935C12.9483 8.19671 12.9881 8.61896 13.1405 9.00268C13.2929 9.38641 13.5509 9.71439 13.882 9.94514C14.213 10.1759 14.6022 10.2991 15.0004 10.2991C15.5341 10.2985 16.0458 10.077 16.4233 9.68333C16.8007 9.28963 17.0129 8.75582 17.0135 8.19904ZM6.01331 17.1621C6.70298 16.7468 7.49524 16.5541 8.28989 16.6084C9.08455 16.6628 9.84591 16.9617 10.4777 17.4675C11.1095 17.9732 11.5833 18.663 11.8393 19.4496C12.0953 20.2363 12.1219 21.0844 11.9158 21.8869C11.7096 22.6893 11.2801 23.4099 10.6813 23.9577C10.0826 24.5054 9.34159 24.8556 8.55204 24.9641C7.7625 25.0725 6.95986 24.9343 6.24562 24.5668C5.53139 24.1994 4.93764 23.6193 4.53946 22.8999C4.27507 22.4222 4.10347 21.8948 4.03445 21.348C3.96543 20.8011 4.00035 20.2454 4.13721 19.7126C4.27407 19.1798 4.51019 18.6803 4.83209 18.2427C5.15399 17.8051 5.55537 17.4379 6.01331 17.1621ZM7.01987 18.981C6.67505 19.1887 6.39701 19.4983 6.22091 19.8709C6.0448 20.2434 5.97855 20.662 6.03052 21.0738C6.08249 21.4856 6.25035 21.872 6.51288 22.1843C6.77541 22.4966 7.12081 22.7206 7.50541 22.8281C7.89 22.9356 8.29652 22.9217 8.67355 22.7882C9.05058 22.6547 9.38119 22.4076 9.62356 22.078C9.86594 21.7485 10.0092 21.3514 10.0352 20.937C10.0613 20.5225 9.9689 20.1093 9.7698 19.7496C9.50239 19.2678 9.0627 18.9163 8.54718 18.7722C8.03165 18.6281 7.48239 18.7032 7.01987 18.981ZM19.9612 24.4371C19.2714 24.0219 18.7151 23.4026 18.3626 22.6575C18.0102 21.9125 17.8776 21.0751 17.9814 20.2514C18.0852 19.4276 18.4209 18.6545 18.946 18.0298C19.4711 17.4051 20.162 16.9569 20.9313 16.7419C21.7006 16.5268 22.5137 16.5546 23.2679 16.8217C24.0221 17.0887 24.6834 17.5831 25.1682 18.2423C25.6529 18.9015 25.9394 19.6958 25.9914 20.5249C26.0434 21.3539 25.8585 22.1805 25.4601 22.8999C24.9262 23.8642 24.0469 24.5678 23.0158 24.8561C21.9846 25.1444 20.8859 24.9937 19.9612 24.4371ZM20.9678 22.6185C21.3126 22.8261 21.7087 22.9225 22.106 22.8953C22.5033 22.8681 22.8839 22.7187 23.1998 22.4658C23.5157 22.213 23.7526 21.8681 23.8806 21.4749C24.0086 21.0816 24.0219 20.6575 23.9188 20.2563C23.8158 19.8551 23.601 19.4948 23.3017 19.221C23.0024 18.9471 22.6319 18.772 22.2372 18.7178C21.8424 18.6635 21.4412 18.7326 21.0841 18.9163C20.7269 19.0999 20.4301 19.3899 20.231 19.7496C19.9646 20.2321 19.8927 20.8051 20.0308 21.343C20.1689 21.8808 20.5059 22.3395 20.9678 22.6185Z"
                                                    fill="#43FEE8"
                                                />
                                                <path
                                                    d="M20.072 10.6556C19.7946 11.0528 19.8109 11.5789 20.1325 11.9411C20.8436 12.7292 21.3685 13.6691 21.6679 14.6905C21.9672 15.7118 22.0332 16.7882 21.8609 17.8388C22.5368 17.8833 23.2123 18.0632 23.8393 18.4239C24.1029 17.0273 24.0416 15.5881 23.6601 14.2194C23.2785 12.8506 22.5872 11.5895 21.6404 10.5351C21.2162 10.0604 20.4465 10.1145 20.084 10.6385C20.0802 10.6442 20.0761 10.65 20.072 10.6556ZM7.99879 14.4753C8.33282 13.4653 8.88386 12.542 9.61266 11.7709C10.3415 10.9999 11.2301 10.4002 12.2153 10.0145C11.9166 9.40386 11.7339 8.72608 11.7303 8C10.3981 8.47572 9.19241 9.25386 8.20673 10.2741C7.22104 11.2944 6.48176 12.5295 6.04612 13.8837C5.85431 14.4811 6.28397 15.1123 6.90545 15.1634L6.92607 15.1651C7.40392 15.2084 7.84797 14.9341 7.99879 14.4753ZM17.3854 24.3762C17.1812 23.9338 16.7189 23.6868 16.2451 23.7875C15.7686 23.8889 15.283 23.9402 14.796 23.9403C13.1627 23.941 11.5788 23.3762 10.3099 22.3406C9.93395 22.9071 9.44219 23.4053 8.81903 23.7715C10.4823 25.2108 12.603 26.0015 14.796 26C15.4237 25.9998 16.0496 25.9337 16.6637 25.8027C17.2986 25.6675 17.6708 24.9863 17.3936 24.395C17.3905 24.3887 17.3876 24.3824 17.3854 24.3762Z"
                                                    fill="#43FEE8"
                                                />
                                            </svg>
                                        ) : (
                                            <svg
                                                xmlns="http://www.w3.org/2000/svg"
                                                width="20"
                                                height="20"
                                                viewBox="0 0 30 30"
                                                fill="none"
                                            >
                                                <path
                                                    d="M19.0269 8.19904C19.0271 9.02983 18.7912 9.84203 18.3489 10.5329C17.9066 11.2238 17.2778 11.7624 16.5421 12.0805C15.8063 12.3986 14.9967 12.4819 14.2156 12.32C13.4344 12.1581 12.7169 11.7581 12.1536 11.1708C11.5904 10.5834 11.2068 9.83497 11.0514 9.02016C10.8959 8.20535 10.9756 7.36075 11.2803 6.59318C11.585 5.82561 12.1011 5.16955 12.7633 4.70796C13.4254 4.24637 14.204 4 15.0004 4C16.0681 4.00007 17.092 4.44244 17.8471 5.22987C18.6021 6.01729 19.0265 7.08529 19.0269 8.19904ZM17.0135 8.19904C17.0135 7.7837 16.8954 7.37768 16.6742 7.03234C16.453 6.68699 16.1386 6.41783 15.7708 6.25888C15.4029 6.09994 14.9982 6.05835 14.6076 6.13938C14.2171 6.22041 13.8584 6.42042 13.5769 6.71411C13.2954 7.0078 13.1036 7.38199 13.0259 7.78935C12.9483 8.19671 12.9881 8.61896 13.1405 9.00268C13.2929 9.38641 13.5509 9.71439 13.882 9.94514C14.213 10.1759 14.6022 10.2991 15.0004 10.2991C15.5341 10.2985 16.0458 10.077 16.4233 9.68333C16.8007 9.28963 17.0129 8.75582 17.0135 8.19904ZM6.01331 17.1621C6.70298 16.7468 7.49524 16.5541 8.28989 16.6084C9.08455 16.6628 9.84591 16.9617 10.4777 17.4675C11.1095 17.9732 11.5833 18.663 11.8393 19.4496C12.0953 20.2363 12.1219 21.0844 11.9158 21.8869C11.7096 22.6893 11.2801 23.4099 10.6813 23.9577C10.0826 24.5054 9.34159 24.8556 8.55204 24.9641C7.7625 25.0725 6.95986 24.9343 6.24562 24.5668C5.53139 24.1994 4.93764 23.6193 4.53946 22.8999C4.27507 22.4222 4.10347 21.8948 4.03445 21.348C3.96543 20.8011 4.00035 20.2454 4.13721 19.7126C4.27407 19.1798 4.51019 18.6803 4.83209 18.2427C5.15399 17.8051 5.55537 17.4379 6.01331 17.1621ZM7.01987 18.981C6.67505 19.1887 6.39701 19.4983 6.22091 19.8709C6.0448 20.2434 5.97855 20.662 6.03052 21.0738C6.08249 21.4856 6.25035 21.872 6.51288 22.1843C6.77541 22.4966 7.12081 22.7206 7.50541 22.8281C7.89 22.9356 8.29652 22.9217 8.67355 22.7882C9.05058 22.6547 9.38119 22.4076 9.62356 22.078C9.86594 21.7485 10.0092 21.3514 10.0352 20.937C10.0613 20.5225 9.9689 20.1093 9.7698 19.7496C9.50239 19.2678 9.0627 18.9163 8.54718 18.7722C8.03165 18.6281 7.48239 18.7032 7.01987 18.981ZM19.9612 24.4371C19.2714 24.0219 18.7151 23.4026 18.3626 22.6575C18.0102 21.9125 17.8776 21.0751 17.9814 20.2514C18.0852 19.4276 18.4209 18.6545 18.946 18.0298C19.4711 17.4051 20.162 16.9569 20.9313 16.7419C21.7006 16.5268 22.5137 16.5546 23.2679 16.8217C24.0221 17.0887 24.6834 17.5831 25.1682 18.2423C25.6529 18.9015 25.9394 19.6958 25.9914 20.5249C26.0434 21.3539 25.8585 22.1805 25.4601 22.8999C24.9262 23.8642 24.0469 24.5678 23.0158 24.8561C21.9846 25.1444 20.8859 24.9937 19.9612 24.4371ZM20.9678 22.6185C21.3126 22.8261 21.7087 22.9225 22.106 22.8953C22.5033 22.8681 22.8839 22.7187 23.1998 22.4658C23.5157 22.213 23.7526 21.8681 23.8806 21.4749C24.0086 21.0816 24.0219 20.6575 23.9188 20.2563C23.8158 19.8551 23.601 19.4948 23.3017 19.221C23.0024 18.9471 22.6319 18.772 22.2372 18.7178C21.8424 18.6635 21.4412 18.7326 21.0841 18.9163C20.7269 19.0999 20.4301 19.3899 20.231 19.7496C19.9646 20.2321 19.8927 20.8051 20.0308 21.343C20.1689 21.8808 20.5059 22.3395 20.9678 22.6185Z"
                                                    fill="#9D9D9D"
                                                />
                                                <path
                                                    d="M20.072 10.6556C19.7946 11.0528 19.8109 11.5789 20.1325 11.9411C20.8436 12.7292 21.3685 13.6691 21.6679 14.6905C21.9672 15.7118 22.0332 16.7882 21.8609 17.8388C22.5368 17.8833 23.2123 18.0632 23.8393 18.4239C24.1029 17.0273 24.0416 15.5881 23.6601 14.2194C23.2785 12.8506 22.5872 11.5895 21.6404 10.5351C21.2162 10.0604 20.4465 10.1145 20.084 10.6385C20.0802 10.6442 20.0761 10.65 20.072 10.6556ZM7.99879 14.4753C8.33282 13.4653 8.88386 12.542 9.61266 11.7709C10.3415 10.9999 11.2301 10.4002 12.2153 10.0145C11.9166 9.40386 11.7339 8.72608 11.7303 8C10.3981 8.47572 9.19241 9.25386 8.20673 10.2741C7.22104 11.2944 6.48176 12.5295 6.04612 13.8837C5.85431 14.4811 6.28397 15.1123 6.90545 15.1634L6.92607 15.1651C7.40392 15.2084 7.84797 14.9341 7.99879 14.4753ZM17.3854 24.3762C17.1812 23.9338 16.7189 23.6868 16.2451 23.7875C15.7686 23.8889 15.283 23.9402 14.796 23.9403C13.1627 23.941 11.5788 23.3762 10.3099 22.3406C9.93395 22.9071 9.44219 23.4053 8.81903 23.7715C10.4823 25.2108 12.603 26.0015 14.796 26C15.4237 25.9998 16.0496 25.9337 16.6637 25.8027C17.2986 25.6675 17.6708 24.9863 17.3936 24.395C17.3905 24.3887 17.3876 24.3824 17.3854 24.3762Z"
                                                    fill="#9D9D9D"
                                                />
                                            </svg>
                                        )}
                                    </div>
                                    {item?.name}
                                </div>
                            ))}
                        </div>
                        <div className={HomeCss.main_right_3_right}>
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="20"
                                height="20"
                                viewBox="0 0 30 30"
                                fill="none"
                            >
                                <path
                                    d="M25.7347 24.4654L21.6968 20.4385C22.2968 19.6975 22.7838 18.8805 23.1549 17.9931C23.6737 16.7513 23.8796 15.4305 23.8796 14.0716C23.8796 12.7127 23.6448 11.3919 23.1259 10.1502C22.6244 8.94941 21.9345 7.87167 21.0185 6.94915C20.1025 6.0237 19.0358 5.29739 17.8502 4.79073C16.6211 4.26651 15.3138 4 13.9688 4C12.6237 4 11.3164 4.26651 10.0874 4.79073C8.89887 5.29739 7.83213 6.0237 6.91903 6.94915C6.00303 7.8746 5.28414 8.95234 4.78266 10.1502C4.26379 11.3919 4 12.7127 4 14.0716C4 15.4305 4.26379 16.7513 4.78266 17.9931C5.28414 19.1938 6.00303 20.2716 6.91903 21.1941C7.83503 22.1195 8.90177 22.8458 10.0874 23.3525C11.3164 23.8767 12.6237 24.0847 13.9688 24.0847C15.3138 24.0847 16.6211 23.8767 17.8502 23.3525C18.801 22.9454 19.6764 22.3978 20.4561 21.7212L24.4883 25.7423C24.6622 25.9151 24.8883 26 25.1115 26C25.3405 26 25.5695 25.9121 25.7434 25.7335C26.0884 25.3821 26.0855 24.8139 25.7347 24.4654ZM13.9688 22.2923C11.7802 22.2923 9.72211 21.4899 8.17418 19.926C6.62626 18.3621 5.77403 16.2827 5.77403 14.0716C5.77403 11.8605 6.62626 9.78115 8.17418 8.21725C9.72211 6.65335 11.7802 5.79233 13.9688 5.79233C16.1573 5.79233 18.2154 6.65335 19.7633 8.21725C21.3113 9.78115 22.1055 11.8605 22.1055 14.0716C22.1055 16.2827 21.3113 18.3621 19.7633 19.926C18.2154 21.4899 16.1573 22.2923 13.9688 22.2923Z"
                                    fill="white"
                                    fill-opacity="0.2"
                                />
                            </svg>
                            <input
                                type="text"
                                value={searchValue}
                                onChange={(e) => setSearchValue(e.target.value)}
                                onKeyDown={handleKeyPress}
                                placeholder="Search"
                            />
                        </div>
                    </div>
                    <div>
                        <div className={HomeCss.main_right_4}>
                            {categoryByIdList.map((item: any, index: number) => (
                                <div
                                    key={index}
                                    className={HomeCss.main_right_4_item}
                                    onClick={() => {
                                        if (item?.isOpen !== 1) {
                                            notification.open({
                                                key: 'Coming Soon',
                                                message: 'Coming Soon',
                                            });
                                            return;
                                        }
                                        if (item?.isInternal === 1) {
                                            navigate(`${item?.url}`);
                                        } else {
                                            window.open(item?.url, '_blank');
                                        }
                                    }}
                                >
                                    <div className={HomeCss.main_right_4_item_top}>
                                        <img src={icon5} alt="" />
                                        <div className={HomeCss.main_right_4_item_top_right}>
                                            <div className={HomeCss.main_right_4_item_top_right_1}>{item?.name}</div>
                                            <div className={HomeCss.main_right_4_item_top_right_2}>{item?.label}</div>
                                        </div>
                                    </div>
                                    <div className={HomeCss.main_right_4_item_bottom}>{item?.description}</div>
                                </div>
                            ))}
                        </div>
                        {categoryByIdList.length === 0 ? (
                            <div className="pt-[60px]">
                                <img src={icon6} className="block mx-auto" alt="" />
                            </div>
                        ) : (
                            ''
                        )}
                    </div>
                    <div style={{ display: tabIndex === 10 ? 'block' : 'none' }}>
                        <div className={HomeCss.main_right_4_item} onClick={() => {}}>
                            <div className={HomeCss.main_right_4_item_top}>
                                <img src={icon5} alt="" />
                                <div className={HomeCss.main_right_4_item_top_right}>
                                    <div className={HomeCss.main_right_4_item_top_right_1}>$CAN Staking</div>
                                    <div className={HomeCss.main_right_4_item_top_right_2}>Web3 dapp</div>
                                </div>
                            </div>
                            <div className={HomeCss.main_right_4_item_bottom}>
                                Here, you can stake your $CAN to earn experience points, level up your AI pets, and
                                unlock various platform benefits.
                            </div>
                        </div>
                        <div
                            className={HomeCss.main_right_4_item}
                            onClick={() => {
                                notification.open({
                                    key: 'Coming Soon',
                                    message: 'Coming Soon',
                                });
                            }}
                        >
                            <div className={HomeCss.main_right_4_item_top}>
                                <img src={icon5} alt="" />
                                <div className={HomeCss.main_right_4_item_top_right}>
                                    <div className={HomeCss.main_right_4_item_top_right_1}>$CAN NFT Claim</div>
                                    <div className={HomeCss.main_right_4_item_top_right_2}>Web3 dapp</div>
                                </div>
                            </div>
                            <div className={HomeCss.main_right_4_item_bottom}>Claim your $CAN NFT</div>
                        </div>
                        <div
                            className={HomeCss.main_right_4_item}
                            onClick={() => {
                                notification.open({
                                    key: 'Coming Soon',
                                    message: 'Coming Soon',
                                });
                            }}
                        >
                            <div className={HomeCss.main_right_4_item_top}>
                                <img src={icon5} alt="" />
                                <div className={HomeCss.main_right_4_item_top_right}>
                                    <div className={HomeCss.main_right_4_item_top_right_1}>Web3 Glossary</div>
                                    <div className={HomeCss.main_right_4_item_top_right_2}>AGENT</div>
                                </div>
                            </div>
                            <div className={HomeCss.main_right_4_item_bottom}>
                                Quickly learn Web3 knowledge through Q&A.
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
}
